spring.application.name=pokupka24-notification
server.port=15000

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group-1
kafka.topic.purchases=pokupka24.purchases.v1

#client.pokupka24rest.url=localhost:13000
spring.cloud.openfeign.client.config.pokupka24rest.url=http://localhost:13000
spring.cloud.openfeign.client.config.pokupka24rest.connect-timeout=5000
spring.cloud.openfeign.client.config.pokupka24rest.read-timeout=2000
#spring.cloud.loadbalancer.retry.enabled=false
#     Spring Cloud CircuitBreaker vs resilience4j ??
#spring.cloud.openfeign.circuitbreaker.enabled=true

#count_based или time_based
resilience4j.circuitbreaker.instances.pokupka24-breaker.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.pokupka24-breaker.sliding-window-size=5
resilience4j.circuitbreaker.instances.pokupka24-breaker.failure-rate-threshold=70
resilience4j.circuitbreaker.instances.pokupka24-breaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.pokupka24-breaker.wait-duration-in-open-state=10s
resilience4j.circuitbreaker.instances.pokupka24-breaker.max-wait-duration-in-half-open-state=5s
resilience4j.circuitbreaker.instances.pokupka24-breaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.pokupka24-breaker.permitted-number-of-calls-in-half-open-state=2
resilience4j.retry.instances.pokupka24-retry.max-attempts=2
resilience4j.retry.instances.pokupka24-retry.wait-duration=3s

